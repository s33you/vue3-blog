[{"title":"lottery-app-global","date":"","content":"<h1 style='text-align:center'>lottery-app-global</h1>\n<h2>/type</h2>\n<h3>Querry.ts</h3>\n<hr>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>//依赖</li><li><span class=\"line-num\" data-line=\"2\"></span>import {MyBase64} from &quot;@qxlib/base/impl&quot;;</li><li><span class=\"line-num\" data-line=\"3\"></span>import {Foundation} from &quot;@global/utils/Foundation&quot;;</li><li><span class=\"line-num\" data-line=\"4\"></span>import {Configuration} from &quot;@global/Configuration&quot;;</li><li><span class=\"line-num\" data-line=\"5\"></span>//所用属性或方法</li><li><span class=\"line-num\" data-line=\"6\"></span>MyBase64.Decode,</li><li><span class=\"line-num\" data-line=\"7\"></span>Foundation.parseUrl,</li><li><span class=\"line-num\" data-line=\"8\"></span>Configuration.comCode</li></ol></code></pre>\n<h4>静态属性</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>uid</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>option</td>\n<td>any</td>\n<td>参数</td>\n</tr>\n<tr>\n<td>page</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>qrcode</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>params</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>comCode</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>phoneNumber</td>\n<td>string</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4>静态方法</h4>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set</td>\n<td><code>option:any</code></td>\n<td>给静态属性赋值的方法，且如果有<code>comCode</code>字段，则将其赋值给<code>Configuration.comCode</code>,调用<code>MyBase64.Decode</code>解析<code>uid</code>字段</td>\n</tr>\n<tr>\n<td>get</td>\n<td><code>name:string</code></td>\n<td>从<code>option</code>属性取值</td>\n</tr>\n<tr>\n<td>init</td>\n<td>无</td>\n<td>从<code>url</code>中解析参数，调用了<code>Foundation.parseUrl</code></td>\n</tr>\n<tr>\n<td>toObject</td>\n<td>null</td>\n<td>将Query类的静态属性打包成对象返回</td>\n</tr>\n</tbody>\n</table>\n<h3>ErrorList.ts</h3>\n<p>以对象形式定义了错误列表，错误项是自定义的错误类型,错误项,供<code>@qxlib/net</code> 的<code>Soilder.getMessage</code> 和 <code>Soilder.errorBuilder</code>使用</p>\n<h2>/utils</h2>\n<h3>Foundation.ts</h3>\n<h4>静态方法</h4>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>alert</td>\n<td><code>content</code>: <code>string</code>, <code>title?</code>: <code>string</code>, <code>cb?</code>:<code> () =&gt; void</code></td>\n<td>提示信息</td>\n</tr>\n<tr>\n<td>confirm</td>\n<td><code>content</code>: <code>string</code>, <code>title?</code>: <code>string</code>, <code>cb?</code>:<code> () =&gt; void</code></td>\n<td>对话框提示信息</td>\n</tr>\n<tr>\n<td>isEmpty</td>\n<td><code>value:any</code></td>\n<td>判定<code>value</code>是否为空值(<code>undefined</code>,<code>0</code>,<code>''</code>,<code>[]</code>,<code>null</code>)</td>\n</tr>\n<tr>\n<td>nav</td>\n<td><code>page: string</code>, <code>data?: any</code>, <code>isReplace: boolean = true</code></td>\n<td>页面跳转方法，指定跳转页面名，是否带数据，是否替换路由，内部实现依赖<code>RouterMap</code>,页面名依赖<code>routeMap.json</code></td>\n</tr>\n<tr>\n<td>checkPhoneNumber</td>\n<td><code>phoneNumber:string</code></td>\n<td>检查电话号码是否符合规则返回错误信息</td>\n</tr>\n<tr>\n<td>parseQrCode</td>\n<td><code>url:string</code></td>\n<td>解析url参数，返回参数对象</td>\n</tr>\n<tr>\n<td>showPrizeInfo</td>\n<td><code>uid:string</code></td>\n<td>获取奖品信息，具体内容不清楚，待修订</td>\n</tr>\n<tr>\n<td>formatData</td>\n<td><code>data?: any, post?: boolean</code></td>\n<td>将请求参数格式化为指定格式</td>\n</tr>\n<tr>\n<td><code>getPhoneLoc</code> &amp;&amp; <code>buildPhoneLocation</code></td>\n<td><code>uid: string, phoneNumber: string</code> &amp;&amp; <code>data: any</code></td>\n<td>获取手机号归属地</td>\n</tr>\n<tr>\n<td><code>isHavePrize</code> &amp;&amp; <code>isReceivedPrize</code></td>\n<td>…</td>\n<td>作用未知，待修订</td>\n</tr>\n<tr>\n<td>modifyAddress</td>\n<td><code>uid: string, aid: any</code></td>\n<td>编辑地址？待修订</td>\n</tr>\n<tr>\n<td>getPhysicalGiftAddress</td>\n<td><code>uid: string, pwid: any</code></td>\n<td>获取自提地址？返回一个地址列表，待修订</td>\n</tr>\n<tr>\n<td>dateFormat</td>\n<td><code>date: any, pattern: string</code></td>\n<td>格式化时间</td>\n</tr>\n<tr>\n<td>selectPrizeTypeDescript</td>\n<td><code>data:any</code></td>\n<td>获取单个商品信息，返回一个html拼接字符串</td>\n</tr>\n<tr>\n<td>_prizePrice</td>\n<td></td>\n<td>作用未知，待修订</td>\n</tr>\n<tr>\n<td>gainMutipDesc</td>\n<td></td>\n<td>作用未知，待修订</td>\n</tr>\n<tr>\n<td>getInitData</td>\n<td></td>\n<td>获取是否需要电话号码这些配置</td>\n</tr>\n<tr>\n<td>replaceStr</td>\n<td><code>content: string, data: any</code></td>\n<td>中奖结果、二次扫码字符串替换</td>\n</tr>\n</tbody>\n</table>\n<h2>Configuration.ts</h2>\n<h3>静态属性</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>style</td>\n<td></td>\n<td>自定义样式：custom.css *  仅在小程序模式下有效，用于加载custom.css</td>\n</tr>\n<tr>\n<td>config</td>\n<td></td>\n<td>配置文件内容 H5模式下，会每次从config.js中获取最新的配置* 小程序模式下，在打包时就需指定</td>\n</tr>\n<tr>\n<td>comCode</td>\n<td></td>\n<td>公司code,h5模式从url参数中获取，小程序从接口中获取</td>\n</tr>\n<tr>\n<td>custom</td>\n<td></td>\n<td>用户自定义配置，小程序模式下，从接口获取配置</td>\n</tr>\n</tbody>\n</table>\n<h3>静态方法</h3>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defH5</td>\n<td></td>\n<td>H5模式下静态属性的初始化函数，config.js和custom.js在index.html的script标签获取，custtom.css同样也是，但不会调用Configuration.style属性</td>\n</tr>\n<tr>\n<td>defWXMP</td>\n<td></td>\n<td>小程序模式下静态属性的初始化函数，config.js打包时就被确定，custom与style在接口确定</td>\n</tr>\n<tr>\n<td>setCustom</td>\n<td></td>\n<td>用于小程序从接口获取custom.js配置后，注入配置</td>\n</tr>\n<tr>\n<td>setStyle</td>\n<td></td>\n<td>用于小程序从接口获取custom.css配置，注入样式</td>\n</tr>\n</tbody>\n</table>\n<h3>剩下的</h3>\n<p>懒得写了，自己看定义，qxlib/base 用的比较多。</p>\n","author":""},{"title":"lottery-app","date":"","content":"<h1 style='text-align:center'>lottery-app</h1>\n<h2>目录结构</h2>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span></li><li><span class=\"line-num\" data-line=\"2\"></span>│  .gitignore </li><li><span class=\"line-num\" data-line=\"3\"></span>│  babel.config.js</li><li><span class=\"line-num\" data-line=\"4\"></span>│  bootstrap.js</li><li><span class=\"line-num\" data-line=\"5\"></span>│  global.d.ts //全局声明config和custom变量,供h5模式下配置使用</li><li><span class=\"line-num\" data-line=\"6\"></span>│  package.json</li><li><span class=\"line-num\" data-line=\"7\"></span>│  postcss.config.js</li><li><span class=\"line-num\" data-line=\"8\"></span>│  README.md</li><li><span class=\"line-num\" data-line=\"9\"></span>│  routemap.json //路由表,打包时由自定义插件生成</li><li><span class=\"line-num\" data-line=\"10\"></span>│  sfc.d.ts</li><li><span class=\"line-num\" data-line=\"11\"></span>│  tsconfig.json</li><li><span class=\"line-num\" data-line=\"12\"></span>│  vue.config.js </li><li><span class=\"line-num\" data-line=\"13\"></span>├─configs</li><li><span class=\"line-num\" data-line=\"14\"></span>│      config.js //config.js 正式服会被正式服的配置取代</li><li><span class=\"line-num\" data-line=\"15\"></span>│      custom.css //从二维码后台管理系统拿到的生成样式文件，仅用于标准项目</li><li><span class=\"line-num\" data-line=\"16\"></span>│      custom.js    //同上</li><li><span class=\"line-num\" data-line=\"17\"></span>├─dist</li><li><span class=\"line-num\" data-line=\"18\"></span>├─public</li><li><span class=\"line-num\" data-line=\"19\"></span>│      index.html</li><li><span class=\"line-num\" data-line=\"20\"></span>└─src</li><li><span class=\"line-num\" data-line=\"21\"></span>    │  App.vue</li><li><span class=\"line-num\" data-line=\"22\"></span>    │  main.ts //程序入口</li><li><span class=\"line-num\" data-line=\"23\"></span>    │  manifest.json</li><li><span class=\"line-num\" data-line=\"24\"></span>    │  pages.json</li><li><span class=\"line-num\" data-line=\"25\"></span>    │  uni.scss //uniapp全局样式</li><li><span class=\"line-num\" data-line=\"26\"></span>    │  </li><li><span class=\"line-num\" data-line=\"27\"></span>    ├─adapter </li><li><span class=\"line-num\" data-line=\"28\"></span>    │  └─scan</li><li><span class=\"line-num\" data-line=\"29\"></span>    │          error.vue</li><li><span class=\"line-num\" data-line=\"30\"></span>    │          index.vue //页面入口，当然也可以不用这个，自己写一个</li><li><span class=\"line-num\" data-line=\"31\"></span>    │          wxmp.vue</li><li><span class=\"line-num\" data-line=\"32\"></span>    │          </li><li><span class=\"line-num\" data-line=\"33\"></span>    ├─components      //公用组件</li><li><span class=\"line-num\" data-line=\"34\"></span>    ├─global</li><li><span class=\"line-num\" data-line=\"35\"></span>    │  │  AppBoot.ts     //在main.ts中调用，用于初始化Configuration.ts，以及一些默认配置</li><li><span class=\"line-num\" data-line=\"36\"></span>    │  │  Configuration.ts //初始化配置</li><li><span class=\"line-num\" data-line=\"37\"></span>    │  │   </li><li><span class=\"line-num\" data-line=\"38\"></span>    │  ├─api </li><li><span class=\"line-num\" data-line=\"39\"></span>    │  │  │  LotteryApi.ts //请求相关api，公有接口</li><li><span class=\"line-num\" data-line=\"40\"></span>    │  │  │  SystemApi.ts //系统交互方法，已做跨平台自适配,定位之类的</li><li><span class=\"line-num\" data-line=\"41\"></span>    │  │  │   |</li><li><span class=\"line-num\" data-line=\"42\"></span>    |  |  |   依赖</li><li><span class=\"line-num\" data-line=\"43\"></span>    │  │  ├─platform</li><li><span class=\"line-num\" data-line=\"44\"></span>    │  │  │      H5.ts</li><li><span class=\"line-num\" data-line=\"45\"></span>    │  │  │      WeChatH5.ts</li><li><span class=\"line-num\" data-line=\"46\"></span>    │  │  │      WeChatMP.ts</li><li><span class=\"line-num\" data-line=\"47\"></span>    │  │  │      </li><li><span class=\"line-num\" data-line=\"48\"></span>    │  │  └─proxy //封装的请求方法</li><li><span class=\"line-num\" data-line=\"49\"></span>    │  │          LotteryProxy.ts</li><li><span class=\"line-num\" data-line=\"50\"></span>    │  │          ServerType.ts</li><li><span class=\"line-num\" data-line=\"51\"></span>    │  │          </li><li><span class=\"line-num\" data-line=\"52\"></span>    │  ├─style //公共样式</li><li><span class=\"line-num\" data-line=\"53\"></span>    │  │      common.scss</li><li><span class=\"line-num\" data-line=\"54\"></span>    │  │      reset.scss</li><li><span class=\"line-num\" data-line=\"55\"></span>    │  │      </li><li><span class=\"line-num\" data-line=\"56\"></span>    │  ├─type</li><li><span class=\"line-num\" data-line=\"57\"></span>    │  │      Decorators.ts</li><li><span class=\"line-num\" data-line=\"58\"></span>    │  │      ErrorList.ts //错误列表</li><li><span class=\"line-num\" data-line=\"59\"></span>    │  │      Query.ts //url参数分析相关</li><li><span class=\"line-num\" data-line=\"60\"></span>    │  │      </li><li><span class=\"line-num\" data-line=\"61\"></span>    │  └─utils</li><li><span class=\"line-num\" data-line=\"62\"></span>    │          Foundation.ts //常用方法工具库，如号码验证，路由导航</li><li><span class=\"line-num\" data-line=\"63\"></span>    │          RouteMap.ts //用于根据路由表匹配路径</li><li><span class=\"line-num\" data-line=\"64\"></span>    │          UniHttp.ts</li><li><span class=\"line-num\" data-line=\"65\"></span>    │          </li><li><span class=\"line-num\" data-line=\"66\"></span>    ├─pages-ctm     //定制项目存放目录</li><li><span class=\"line-num\" data-line=\"67\"></span>    │  └─huiquan</li><li><span class=\"line-num\" data-line=\"68\"></span>    |         </li><li><span class=\"line-num\" data-line=\"69\"></span>    ├─pages-std //标准模板</li><li><span class=\"line-num\" data-line=\"70\"></span>    │  │  pages.json</li><li><span class=\"line-num\" data-line=\"71\"></span>    │  │  </li><li><span class=\"line-num\" data-line=\"72\"></span>    │  ├─logic</li><li><span class=\"line-num\" data-line=\"73\"></span>    │  │      lotteryLogic.ts</li><li><span class=\"line-num\" data-line=\"74\"></span>    │  │      </li><li><span class=\"line-num\" data-line=\"75\"></span>    │  ├─lottery</li><li><span class=\"line-num\" data-line=\"76\"></span>    │  └─others</li><li><span class=\"line-num\" data-line=\"77\"></span>    │          history.vue</li><li><span class=\"line-num\" data-line=\"78\"></span>    │          scaninfo.vue</li><li><span class=\"line-num\" data-line=\"79\"></span>    │          submitAddr.vue</li><li><span class=\"line-num\" data-line=\"80\"></span>    │          submitAddrSuccess.vue</li><li><span class=\"line-num\" data-line=\"81\"></span>    │          success.vue</li><li><span class=\"line-num\" data-line=\"82\"></span>    │          webView.vue</li><li><span class=\"line-num\" data-line=\"83\"></span>    │          </li><li><span class=\"line-num\" data-line=\"84\"></span>    └─static //静态资源存放目录</li></ol></code></pre>\n<h2>项目配置</h2>\n<h3>vue.config.js</h3>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span> plugins: [</li><li><span class=\"line-num\" data-line=\"2\"></span>            // 移动静态资源目录</li><li><span class=\"line-num\" data-line=\"3\"></span>            new CopyWebpackPlugin([</li><li><span class=\"line-num\" data-line=\"4\"></span>                {</li><li><span class=\"line-num\" data-line=\"5\"></span>                    from: path.join(__dirname, 'configs'),</li><li><span class=\"line-num\" data-line=\"6\"></span>                    to: path.join(__dirname, 'dist', process.env.NODE_ENV === 'production' ? 'build' : 'dev', process.env.UNI_PLATFORM, 'configs')</li><li><span class=\"line-num\" data-line=\"7\"></span>                }</li><li><span class=\"line-num\" data-line=\"8\"></span>            ]),</li><li><span class=\"line-num\" data-line=\"9\"></span>            // 生成路由信息表，给RouteMap使用</li><li><span class=\"line-num\" data-line=\"10\"></span>            function () {</li><li><span class=\"line-num\" data-line=\"11\"></span>                let map = {}; //只有一个储存路由的对象</li><li><span class=\"line-num\" data-line=\"12\"></span>                let pages = require('@dcloudio/uni-cli-shared/lib/pages.js').getPagesJson()</li><li><span class=\"line-num\" data-line=\"13\"></span></li><li><span class=\"line-num\" data-line=\"14\"></span>                // 主包</li><li><span class=\"line-num\" data-line=\"15\"></span>                for (let page of pages.pages) {</li><li><span class=\"line-num\" data-line=\"16\"></span>                    if (page.hasOwnProperty(&quot;name&quot;)) {</li><li><span class=\"line-num\" data-line=\"17\"></span>                        map[page.name] = page.path;</li><li><span class=\"line-num\" data-line=\"18\"></span>                    }</li><li><span class=\"line-num\" data-line=\"19\"></span>                }</li><li><span class=\"line-num\" data-line=\"20\"></span></li><li><span class=\"line-num\" data-line=\"21\"></span>                // 如果有分包</li><li><span class=\"line-num\" data-line=\"22\"></span>                for (let sub of pages.subPackages) {</li><li><span class=\"line-num\" data-line=\"23\"></span>                    for (let subPage of  sub.pages) {</li><li><span class=\"line-num\" data-line=\"24\"></span>                        if (subPage.hasOwnProperty(&quot;name&quot;)) {</li><li><span class=\"line-num\" data-line=\"25\"></span>                            map[subPage.name] = sub.root + &quot;/&quot; + subPage.path;</li><li><span class=\"line-num\" data-line=\"26\"></span>                        }</li><li><span class=\"line-num\" data-line=\"27\"></span>                    }</li><li><span class=\"line-num\" data-line=\"28\"></span>                }</li><li><span class=\"line-num\" data-line=\"29\"></span></li><li><span class=\"line-num\" data-line=\"30\"></span>                let fs = require('fs');</li><li><span class=\"line-num\" data-line=\"31\"></span>                fs.writeFileSync(path.join(__dirname, 'routemap.json'), JSON.stringify(map), {});</li><li><span class=\"line-num\" data-line=\"32\"></span>            }</li><li><span class=\"line-num\" data-line=\"33\"></span>        ]</li></ol></code></pre>\n<p>在<code>plugins</code>中自定义了路由表的处理，根据<code>pages.json</code>的配置，自动生成<code>routemap.json</code>,供RouteMap使用，因此要重新生成<code>routemap</code>需要重启服务。此外需要注意生成方式，所有路径都存在map当中，因此同名路径会被后生成的路径覆盖</p>\n<h3>bootstrap.js</h3>\n<p>项目打包工具函数</p>\n<h3>main.ts</h3>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>declare module &quot;vue/types/vue&quot; {</li><li><span class=\"line-num\" data-line=\"2\"></span>    interface Vue {</li><li><span class=\"line-num\" data-line=\"3\"></span>        $gRefs: any;</li><li><span class=\"line-num\" data-line=\"4\"></span>    }</li><li><span class=\"line-num\" data-line=\"5\"></span>}</li><li><span class=\"line-num\" data-line=\"6\"></span></li><li><span class=\"line-num\" data-line=\"7\"></span>new AppBoot(); //调用APPBoot()，AppBoot对程序做初始化，包括Configuration等，不做赘述</li><li><span class=\"line-num\" data-line=\"8\"></span>new App().$mount();</li></ol></code></pre>\n<h2>流程</h2>\n<p>程序启动后，跳转到入口页面<code>adapter/scan/index.vue</code>，当然这个是根据src目录下的pages.json 来确定的</p>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>...</li><li><span class=\"line-num\" data-line=\"2\"></span>export default class Index extends Vue {</li><li><span class=\"line-num\" data-line=\"3\"></span>  /**</li><li><span class=\"line-num\" data-line=\"4\"></span>   * app 主入口.</li><li><span class=\"line-num\" data-line=\"5\"></span>   * H5模式下，直接走常规模式</li><li><span class=\"line-num\" data-line=\"6\"></span>   * 微信小程序下，需要先获取用户、活动相关的信息</li><li><span class=\"line-num\" data-line=\"7\"></span>   * @param option</li><li><span class=\"line-num\" data-line=\"8\"></span>   */</li><li><span class=\"line-num\" data-line=\"9\"></span>  onLoad(option: any) {  //从url中获取参数</li><li><span class=\"line-num\" data-line=\"10\"></span>    uni.showLoading({ title: &quot;正在加载&quot; });</li><li><span class=\"line-num\" data-line=\"11\"></span>    Query.set(option); 如果有参数传入入口页面，则设置参数</li><li><span class=\"line-num\" data-line=\"12\"></span>    //#ifdef H5</li><li><span class=\"line-num\" data-line=\"13\"></span>    Query.init(); //从url中获取参数</li><li><span class=\"line-num\" data-line=\"14\"></span>    Foundation.nav(Query.page ? Query.page : &quot;huiquan&quot;);//重定向</li><li><span class=\"line-num\" data-line=\"15\"></span>    //#endif</li><li><span class=\"line-num\" data-line=\"16\"></span></li><li><span class=\"line-num\" data-line=\"17\"></span>    //#ifdef MP-WEIXIN</li><li><span class=\"line-num\" data-line=\"18\"></span>    Foundation.nav(&quot;wxmp&quot;); //如果是微信小程序，重定向到微信小程序入口</li><li><span class=\"line-num\" data-line=\"19\"></span>    //#endif</li><li><span class=\"line-num\" data-line=\"20\"></span>  }</li><li><span class=\"line-num\" data-line=\"21\"></span>}</li><li><span class=\"line-num\" data-line=\"22\"></span>&lt;/script&gt;</li><li><span class=\"line-num\" data-line=\"23\"></span></li><li><span class=\"line-num\" data-line=\"24\"></span>&lt;style lang=&quot;scss&quot;&gt;</li><li><span class=\"line-num\" data-line=\"25\"></span>&lt;/style&gt;</li></ol></code></pre>\n<h4>特别说明</h4>\n<h3>Querry.ts</h3>\n<hr>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>//依赖</li><li><span class=\"line-num\" data-line=\"2\"></span>import {MyBase64} from &quot;@qxlib/base/impl&quot;;</li><li><span class=\"line-num\" data-line=\"3\"></span>import {Foundation} from &quot;@global/utils/Foundation&quot;;</li><li><span class=\"line-num\" data-line=\"4\"></span>import {Configuration} from &quot;@global/Configuration&quot;;</li><li><span class=\"line-num\" data-line=\"5\"></span>//所用属性或方法</li><li><span class=\"line-num\" data-line=\"6\"></span>MyBase64.Decode,</li><li><span class=\"line-num\" data-line=\"7\"></span>Foundation.parseUrl,</li><li><span class=\"line-num\" data-line=\"8\"></span>Configuration.comCode</li></ol></code></pre>\n<h4>静态属性</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>uid</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>option</td>\n<td>any</td>\n<td>参数</td>\n</tr>\n<tr>\n<td>page</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>qrcode</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>params</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>comCode</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>phoneNumber</td>\n<td>string</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4>静态方法</h4>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set</td>\n<td><code>option:any</code></td>\n<td>给静态属性赋值的方法，且如果有<code>comCode</code>字段，则将其赋值给<code>Configuration.comCode</code>,调用<code>MyBase64.Decode</code>解析<code>uid</code>字段</td>\n</tr>\n<tr>\n<td>get</td>\n<td><code>name:string</code></td>\n<td>从<code>option</code>属性取值</td>\n</tr>\n<tr>\n<td>init</td>\n<td>无</td>\n<td>从<code>url</code>中解析参数，调用了<code>Foundation.parseUrl</code>,仅h5有效</td>\n</tr>\n<tr>\n<td>toObject</td>\n<td>null</td>\n<td>将Query类的静态属性打包成对象返回</td>\n</tr>\n</tbody>\n</table>\n<p>新建一个h5定制项目的通用方式</p>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:javascript</span><ol><li><span class=\"line-num\" data-line=\"1\"></span><span class=\"hljs-comment\">// src/pages.json 项目通过这个读取页面路劲，基于uni</span></li><li><span class=\"line-num\" data-line=\"2\"></span>{</li><li><span class=\"line-num\" data-line=\"3\"></span>    <span class=\"hljs-string\">&quot;pages&quot;</span>: [</li><li><span class=\"line-num\" data-line=\"4\"></span>        {</li><li><span class=\"line-num\" data-line=\"5\"></span>            <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;index&quot;</span>, <span class=\"hljs-comment\">//</span></li><li><span class=\"line-num\" data-line=\"6\"></span>            <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;pages-ctm/xuehua_add/index&quot;</span></li><li><span class=\"line-num\" data-line=\"7\"></span>        },</li><li><span class=\"line-num\" data-line=\"8\"></span>        {</li><li><span class=\"line-num\" data-line=\"9\"></span>            <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;lottery&quot;</span>,</li><li><span class=\"line-num\" data-line=\"10\"></span>            <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;pages-ctm/xuehua_add/lottery&quot;</span></li><li><span class=\"line-num\" data-line=\"11\"></span>        },</li><li><span class=\"line-num\" data-line=\"12\"></span>        {</li><li><span class=\"line-num\" data-line=\"13\"></span>            <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;scaninfo&quot;</span>,</li><li><span class=\"line-num\" data-line=\"14\"></span>            <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;pages-ctm/xuehua_add/scaninfo&quot;</span></li><li><span class=\"line-num\" data-line=\"15\"></span>        },</li><li><span class=\"line-num\" data-line=\"16\"></span>        {</li><li><span class=\"line-num\" data-line=\"17\"></span>            <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;success&quot;</span>,</li><li><span class=\"line-num\" data-line=\"18\"></span>            <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;pages-ctm/xuehua_add/success&quot;</span> </li><li><span class=\"line-num\" data-line=\"19\"></span>        }</li><li><span class=\"line-num\" data-line=\"20\"></span>    ],</li><li><span class=\"line-num\" data-line=\"21\"></span>    <span class=\"hljs-string\">&quot;subPackages&quot;</span>: [],</li><li><span class=\"line-num\" data-line=\"22\"></span>    <span class=\"hljs-string\">&quot;globalStyle&quot;</span>: {</li><li><span class=\"line-num\" data-line=\"23\"></span>        <span class=\"hljs-string\">&quot;navigationBarTextStyle&quot;</span>: <span class=\"hljs-string\">&quot;black&quot;</span>,</li><li><span class=\"line-num\" data-line=\"24\"></span>        <span class=\"hljs-string\">&quot;navigationBarTitleText&quot;</span>: <span class=\"hljs-string\">&quot;&quot;</span>,</li><li><span class=\"line-num\" data-line=\"25\"></span>        <span class=\"hljs-string\">&quot;navigationBarBackgroundColor&quot;</span>: <span class=\"hljs-string\">&quot;#F8F8F8&quot;</span>,</li><li><span class=\"line-num\" data-line=\"26\"></span>        <span class=\"hljs-string\">&quot;backgroundColor&quot;</span>: <span class=\"hljs-string\">&quot;#F8F8F8&quot;</span></li><li><span class=\"line-num\" data-line=\"27\"></span>    }</li><li><span class=\"line-num\" data-line=\"28\"></span>}</li></ol></code></pre>\n<p>每个页面需要从url 中拿到想要的参数</p>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>//在页面初始化生命周期</li><li><span class=\"line-num\" data-line=\"2\"></span>onLoad(option: any) {</li><li><span class=\"line-num\" data-line=\"3\"></span>    Query.init() //解析url参数，并保存在Query的静态属性上</li><li><span class=\"line-num\" data-line=\"4\"></span>    console.log(Query.uid)</li><li><span class=\"line-num\" data-line=\"5\"></span>    let params = JSON.parse(MyBase64.Decode(Query.params));</li><li><span class=\"line-num\" data-line=\"6\"></span>    this.uid = Query.uid</li><li><span class=\"line-num\" data-line=\"7\"></span>    this.pageData = Foundation.getInitData(params) </li><li><span class=\"line-num\" data-line=\"8\"></span>    //pageData 是活动配置信息，包括是否需要电话号码，是否定位信息</li><li><span class=\"line-num\" data-line=\"9\"></span>    this.phoneNumber = this.pageData.phoneNumber || &quot;&quot;;</li><li><span class=\"line-num\" data-line=\"10\"></span>    this.paramsInit();</li><li><span class=\"line-num\" data-line=\"11\"></span>    console.log(this.pageData)</li><li><span class=\"line-num\" data-line=\"12\"></span>  }</li></ol></code></pre>\n<p>其余页面也是类似，可以参考以往页面，结合控制台输出，和<code>NetWork</code>查看具体是什么数据，</p>\n","author":""},{"title":"Stream All The Things (流编程）","date":"","content":"<h1 style='text-align:center'>Stream All The Things (流编程）</h1>\n<h3>缓冲和流</h3>\n<h4>等待输入完毕程序再做处理</h4>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>sequenceDiagram </li><li><span class=\"line-num\" data-line=\"2\"></span>participant program as 程序</li><li><span class=\"line-num\" data-line=\"3\"></span>participant buffer  as 缓冲区</li><li><span class=\"line-num\" data-line=\"4\"></span>participant customer as 消费者</li><li><span class=\"line-num\" data-line=\"5\"></span></li><li><span class=\"line-num\" data-line=\"6\"></span>program-&gt;&gt;buffer:接受h e l l o </li><li><span class=\"line-num\" data-line=\"7\"></span>Note left of program:t1</li><li><span class=\"line-num\" data-line=\"8\"></span>program-&gt;&gt;buffer:接受 ,nodej</li><li><span class=\"line-num\" data-line=\"9\"></span>Note left of program:t2</li><li><span class=\"line-num\" data-line=\"10\"></span>program-&gt;&gt;customer:组合完毕 ,发给消费者</li></ol></code></pre>\n<h4>流处理</h4>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:normal</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>sequenceDiagram </li><li><span class=\"line-num\" data-line=\"2\"></span>participant program as 程序</li><li><span class=\"line-num\" data-line=\"3\"></span>participant buffer  as 缓冲区</li><li><span class=\"line-num\" data-line=\"4\"></span>participant customer as 消费者</li><li><span class=\"line-num\" data-line=\"5\"></span></li><li><span class=\"line-num\" data-line=\"6\"></span>program-&gt;&gt;buffer:接受h e l l o </li><li><span class=\"line-num\" data-line=\"7\"></span>program-&gt;&gt;customer:发给消费者</li><li><span class=\"line-num\" data-line=\"8\"></span>Note left of program:t1</li><li><span class=\"line-num\" data-line=\"9\"></span>program-&gt;&gt;buffer:接受 ,nodej</li><li><span class=\"line-num\" data-line=\"10\"></span>program-&gt;&gt;customer:发给消费者</li><li><span class=\"line-num\" data-line=\"11\"></span>Note left of program:t2</li><li><span class=\"line-num\" data-line=\"12\"></span></li></ol></code></pre>\n<p>这样的处理方式的优点，可以从两个维度来分析</p>\n<p>1.空间维度<br>\n2.时间</p>\n<h4>空间效率</h4>\n<p>首先显而易见的是，如果当所有信息接受完，我们再让程序做处理，那么会发生这样的情况，当数据足够大时，我们的buffer 空间开销是不可估量的，而且node 的限制，缓存区最大不能超过 0x3FFFFFFFbytes,约等于1GB。内存溢出等问题接踵而来</p>\n<p><strong>实例:实现GZIP</strong></p>\n","author":""}]