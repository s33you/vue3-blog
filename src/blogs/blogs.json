[{"title":"测试文章","date":"2023-6-19","content":"<h2 style='text-align:center'>测试文章</h2>\n<span style=text-align:center;color:grey;margin-right:10px;>日期：</span><span style=text-align:center;color:grey;margin-right:10px;>2023-6-19</span><span style=text-align:center;color:grey;margin-right:10px;>最后修改时间：</span><span style=text-align:center;color:grey;margin-right:10px;>2023-06-15 19:06:32</span><span style='text-align:center;'>作者：</span><span style='text-align:center;'>timebean</span>\n<br></br><h1>markdown-it-container</h1>\n<p><a href=\"https://travis-ci.org/markdown-it/markdown-it-container\"><img src=\"https://img.shields.io/travis/markdown-it/markdown-it-container/master.svg?style=flat\" alt=\"Build Status\"></a><br>\n<a href=\"https://www.npmjs.org/package/markdown-it-container\"><img src=\"https://img.shields.io/npm/v/markdown-it-container.svg?style=flat\" alt=\"NPM version\"></a><br>\n<a href=\"https://coveralls.io/r/markdown-it/markdown-it-container?branch=master\"><img src=\"https://img.shields.io/coveralls/markdown-it/markdown-it-container/master.svg?style=flat\" alt=\"Coverage Status\"></a></p>\n<blockquote>\n<p>Plugin for creating block-level custom containers for <a href=\"https://github.com/markdown-it/markdown-it\">markdown-it</a> markdown parser.</p>\n</blockquote>\n<p><strong>v2.+ requires <code>markdown-it</code> v5.+, see changelog.</strong></p>\n<p>With this plugin you can create block containers like:</p>\n<pre class=\"hljs\"><code><span class=\"name\"> </span><ol><li><span class=\"line-num\" data-line=\"1\"></span>::: warning</li><li><span class=\"line-num\" data-line=\"2\"></span>*here be dragons*</li></ol></code></pre>\n<pre class=\"hljs\"><code><span class=\"name\"> </span><ol><li><span class=\"line-num\" data-line=\"1\"></span></li><li><span class=\"line-num\" data-line=\"2\"></span>.... and specify how they should be rendered. If no renderer defined, `&lt;div&gt;` with</li><li><span class=\"line-num\" data-line=\"3\"></span>container name class will be created:</li><li><span class=\"line-num\" data-line=\"4\"></span></li><li><span class=\"line-num\" data-line=\"5\"></span>```html</li><li><span class=\"line-num\" data-line=\"6\"></span>&lt;div class=&quot;warning&quot;&gt;</li><li><span class=\"line-num\" data-line=\"7\"></span>&lt;em&gt;here be dragons&lt;/em&gt;</li><li><span class=\"line-num\" data-line=\"8\"></span>&lt;/div&gt;</li></ol></code></pre>\n<p>Markup is the same as for <a href=\"http://spec.commonmark.org/0.18/#fenced-code-blocks\">fenced code blocks</a>.<br>\nDifference is, that marker use another character and content is rendered as markdown markup.</p>\n<h2>Installation</h2>\n<p>node.js, browser:</p>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:bash</span><ol><li><span class=\"line-num\" data-line=\"1\"></span>$ npm install markdown-it-container --save</li><li><span class=\"line-num\" data-line=\"2\"></span>$ bower install markdown-it-container --save</li></ol></code></pre>\n<h2>API</h2>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:js</span><ol><li><span class=\"line-num\" data-line=\"1\"></span><span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)()</li><li><span class=\"line-num\" data-line=\"2\"></span>            .use(<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it-container&#x27;</span>), name [, options]);</li></ol></code></pre>\n<p>Params:</p>\n<ul>\n<li><strong>name</strong> - container name (mandatory)</li>\n<li><strong>options:</strong>\n<ul>\n<li><strong>validate</strong> - optional, function to validate tail after opening marker, should<br>\nreturn <code>true</code> on success.</li>\n<li><strong>render</strong> - optional, renderer function for opening/closing tokens.</li>\n<li><strong>marker</strong> - optional (<code>:</code>), character to use in delimiter.</li>\n</ul>\n</li>\n</ul>\n<h2>Example</h2>\n<pre class=\"hljs\"><code><span class=\"name\"> lang:js</span><ol><li><span class=\"line-num\" data-line=\"1\"></span><span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)();</li><li><span class=\"line-num\" data-line=\"2\"></span></li><li><span class=\"line-num\" data-line=\"3\"></span>md.use(<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it-container&#x27;</span>), <span class=\"hljs-string\">&#x27;spoiler&#x27;</span>, {</li><li><span class=\"line-num\" data-line=\"4\"></span></li><li><span class=\"line-num\" data-line=\"5\"></span>  <span class=\"hljs-attr\">validate</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">params</span>) </span>{</li><li><span class=\"line-num\" data-line=\"6\"></span>    <span class=\"hljs-keyword\">return</span> params.trim().match(<span class=\"hljs-regexp\">/^spoiler\\s+(.*)$/</span>);</li><li><span class=\"line-num\" data-line=\"7\"></span>  },</li><li><span class=\"line-num\" data-line=\"8\"></span></li><li><span class=\"line-num\" data-line=\"9\"></span>  <span class=\"hljs-attr\">render</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">tokens, idx</span>) </span>{</li><li><span class=\"line-num\" data-line=\"10\"></span>    <span class=\"hljs-keyword\">var</span> m = tokens[idx].info.trim().match(<span class=\"hljs-regexp\">/^spoiler\\s+(.*)$/</span>);</li><li><span class=\"line-num\" data-line=\"11\"></span></li><li><span class=\"line-num\" data-line=\"12\"></span>    <span class=\"hljs-keyword\">if</span> (tokens[idx].nesting === <span class=\"hljs-number\">1</span>) {</li><li><span class=\"line-num\" data-line=\"13\"></span>      <span class=\"hljs-comment\">// opening tag</span></li><li><span class=\"line-num\" data-line=\"14\"></span>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;details&gt;&lt;summary&gt;&#x27;</span> + md.utils.escapeHtml(m[<span class=\"hljs-number\">1</span>]) + <span class=\"hljs-string\">&#x27;&lt;/summary&gt;\\n&#x27;</span>;</li><li><span class=\"line-num\" data-line=\"15\"></span></li><li><span class=\"line-num\" data-line=\"16\"></span>    } <span class=\"hljs-keyword\">else</span> {</li><li><span class=\"line-num\" data-line=\"17\"></span>      <span class=\"hljs-comment\">// closing tag</span></li><li><span class=\"line-num\" data-line=\"18\"></span>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;/details&gt;\\n&#x27;</span>;</li><li><span class=\"line-num\" data-line=\"19\"></span>    }</li><li><span class=\"line-num\" data-line=\"20\"></span>  }</li><li><span class=\"line-num\" data-line=\"21\"></span>});</li><li><span class=\"line-num\" data-line=\"22\"></span></li><li><span class=\"line-num\" data-line=\"23\"></span><span class=\"hljs-built_in\">console</span>.log(md.render(<span class=\"hljs-string\">&#x27;::: spoiler click me\\n*content*\\n:::\\n&#x27;</span>));</li><li><span class=\"line-num\" data-line=\"24\"></span></li><li><span class=\"line-num\" data-line=\"25\"></span><span class=\"hljs-comment\">// Output:</span></li><li><span class=\"line-num\" data-line=\"26\"></span><span class=\"hljs-comment\">//</span></li><li><span class=\"line-num\" data-line=\"27\"></span><span class=\"hljs-comment\">// &lt;details&gt;&lt;summary&gt;click me&lt;/summary&gt;</span></li><li><span class=\"line-num\" data-line=\"28\"></span><span class=\"hljs-comment\">// &lt;p&gt;&lt;em&gt;content&lt;/em&gt;&lt;/p&gt;</span></li><li><span class=\"line-num\" data-line=\"29\"></span><span class=\"hljs-comment\">// &lt;/details&gt;</span></li></ol></code></pre>\n<h2>License</h2>\n<p><a href=\"https://github.com/markdown-it/markdown-it-container/blob/master/LICENSE\">MIT</a></p>\n","author":"timebean"}]